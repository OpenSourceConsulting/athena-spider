{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MenuController"
    },
    "designerId": "c34b50b2-314d-45d8-8b91-b2a4bf025973",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "expandImg",
                "selector": "#expandImg"
            },
            "designerId": "557a97d4-8fce-491b-9217-2b647bc3cd13"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "collapseImg",
                "selector": "#collapseImg"
            },
            "designerId": "71441f8e-660c-44bc-94b4-77f37c13242f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "listMenuPanel",
                "selector": "#listMenuPanel"
            },
            "designerId": "4ded5d34-22f0-429e-b020-74f6a3f1cdf6"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "dashboardBtn",
                "selector": "#dashboardBtn"
            },
            "designerId": "91e8c976-04f0-4cca-aa45-0179356e2721"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "managementBtn",
                "selector": "#managementBtn"
            },
            "designerId": "1e6e857b-6a0f-416b-9883-5b34daa8307d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "monitoringBtn",
                "selector": "#monitoringBtn"
            },
            "designerId": "f1e96d98-b459-4bb1-92b4-2421767f8aaa"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "userManagementBtn",
                "selector": "#userManagementBtn"
            },
            "designerId": "2735abb2-b38b-4d5d-9a5f-4a99fbec130a"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "centerContainer",
                "selector": "#centerPanel"
            },
            "designerId": "7d8554e4-19c9-4449-b9af-2f409fcad7ee"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mytool",
                "selector": "#mytool"
            },
            "designerId": "a7f6d587-c42e-4c60-8af1-553374bd6b19"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onLaunch",
                "implHandler": [
                    "",
                    "//this.renderDashboard();",
                    "/*",
                    "",
                    "Ext.select(\".dashboard-graph-panel\").on('resize', function(panel, w, h) {",
                    "    alert('Panel resized to ' + w + 'x' + h);",
                    "});",
                    "",
                    "",
                    "*/",
                    "/*",
                    "Ext.Ajax.request({",
                    "    url: 'http://192.168.0.3:8000/render/?width=786&height=508&_salt=1409028000.87&target=vyos.cpu.0.cpu.user.value&from=-2minutes&rawData=true&format=json',",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "",
                    "        var columnData = Ext.decode(response.responseText);",
                    "        var data = columnData[0];",
                    "",
                    "        // Get the quality field from record",
                    "        // Update chart with data",
                    "        var chartList = [];",
                    "        Ext.each(data.datapoints, function (chartData) {",
                    "            var chartCol = {};",
                    "            chartCol.test = chartData.value;",
                    "            chartCol.cate = chartData.date;",
                    "            chartList.push(chartCol);",
                    "        });",
                    "",
                    "        //Ext.getCmp('sampleStore').series.getAt(0).setTitle(data.target);",
                    "",
                    "        Ext.getStore('SampleStore').loadData(chartList, false);",
                    "    }",
                    "});",
                    "*/"
                ]
            },
            "designerId": "3ab9c6dd-78c4-43d7-8c59-10ac1379e55c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dashboardBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "dashboardClick",
                "implHandler": [
                    "/**",
                    " * Dashboard 메뉴 버튼 클릭 시 수행되는 function",
                    " */",
                    "var centerContainer = this.getCenterContainer(),",
                    "    dashboardBtn = this.getDashboardBtn(),",
                    "    managementBtn = this.getManagementBtn(),",
                    "    monitoringBtn = this.getMonitoringBtn(),",
                    "    userManagementBtn = this.getUserManagementBtn(),",
                    "    menuPanel = this.getMenuPanel();",
                    "",
                    "// 현재 선택된 item이 dashboardPanel일 경우 무시한다.",
                    "if (centerContainer.layout.getActiveItem().itemId === \"DashboardPanel\") {",
                    "    dashboardBtn.toggle(true);",
                    "    return;",
                    "}",
                    "",
                    "dashboardBtn.toggle(true);",
                    "managementBtn.toggle(false);",
                    "monitoringBtn.toggle(false);",
                    "userManagementBtn.toggle(false);",
                    "",
                    "centerContainer.layout.setActiveItem(0);",
                    "",
                    "dashboardConstants.me.renderDashboard();",
                    "",
                    "//this.renderDashboard();",
                    "clearInterval(GlobalData.intervalId1);",
                    "clearInterval(GlobalData.intervalId2);",
                    "clearInterval(GlobalData.intervalId3);",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "7862fefd-2324-467c-8bbe-98fadd34b1e3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#managementBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "managementClick",
                "implHandler": [
                    "/**",
                    " * NFV Management 메뉴 버튼 클릭 시 수행되는 function",
                    " */",
                    "this.viewManagementMenu();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "aeefa9d9-b501-4f10-950f-086d22916bcf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "renderServerTree",
                "implHandler": [
                    "var center = Ext.getCmp(\"lnbLocationCombo\").getValue();",
                    "var treeData = [];",
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.apiUrlPrefix + 'mon/vmhost/_all',",
                    "    disableCaching : true,",
                    "    waitMsg: 'Loading...',",
                    "    success: function(response){",
                    "",
                    "        var hostDatas = Ext.decode(response.responseText);",
                    "",
                    "        if(hostDatas != null) {",
                    "",
                    "            var vmDatas = null;",
                    "",
                    "            Ext.Ajax.request({",
                    "                url: GLOBAL.apiUrlPrefix + 'mon/vm/_all?detail=true',",
                    "                disableCaching : true,",
                    "                success: function(vmResponse){",
                    "",
                    "                    vmDatas = Ext.decode(vmResponse.responseText);",
                    "",
                    "                    Ext.each(hostDatas, function(host, index) {",
                    "                        ",
                    "                        if(host.location == center) {",
                    "                                ",
                    "                            host.id = host._id;",
                    "                            host.text = host.name;",
                    "                            host.icon = 'resources/images/icons/server.png';",
                    "                            host.type = 'vmhost';",
                    "    ",
                    "                            if(index == 0) {",
                    "                                host.expanded = true;",
                    "                            }",
                    "    ",
                    "                            var vmList = [];",
                    "                            Ext.each(vmDatas, function(vm) {",
                    "    ",
                    "                                if(host._id == vm.vmhost) {",
                    "    ",
                    "                                    vm.id = vm._id;",
                    "                                    vm.text = vm.vmname;",
                    "                                    vm.icon = 'resources/images/icons/host.png';",
                    "                                    vm.type = 'vm';",
                    "                                    vm.leaf = true;",
                    "    ",
                    "                                    if(vm.interim === true) {",
                    "                                        vm.cls = \"node-red\";",
                    "                                    }",
                    "    ",
                    "                                    vmList.push(vm);",
                    "                                }",
                    "                            });",
                    "    ",
                    "                            if(vmList.length > 0) {",
                    "    ",
                    "                                host.leaf = false;",
                    "                                host.children = vmList;",
                    "    ",
                    "                            } else {",
                    "    ",
                    "                                host.leaf = true;",
                    "    ",
                    "                            }",
                    "                          ",
                    "                            treeData.push(host);",
                    "                        } ",
                    "",
                    "                    });",
                    "",
                    "                    var treeStore = Ext.create('Ext.data.TreeStore', {",
                    "                            model: 'spider.model.VmHostModel',",
                    "                            root: {",
                    "                                expanded: true,",
                    "                                text: 'Server List',",
                    "                                icon : '',",
                    "                                type : 'root',",
                    "                                children: treeData",
                    "                            }",
                    "                        });",
                    "",
                    "                    Ext.getCmp(\"listMenuPanel\").bindStore(treeStore);",
                    "",
                    "                    dashboardConstants.me.renderDashboard();",
                    "",
                    "                }",
                    "            });",
                    "        }",
                    "",
                    "    }",
                    "});",
                    "",
                    ""
                ]
            },
            "designerId": "03696245-2804-465c-8325-eb64fad6960b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#monitoringBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "onMonitoringBtnClick",
                "implHandler": [
                    "",
                    "/**",
                    " * Sample 메뉴 버튼 클릭 시 수행되는 function",
                    " */",
                    "var centerContainer = this.getCenterContainer(),",
                    "    dashboardBtn = this.getDashboardBtn(),",
                    "    managementBtn = this.getManagementBtn(),",
                    "    monitoringBtn = this.getMonitoringBtn(),",
                    "    userManagementBtn = this.getUserManagementBtn(),",
                    "    menuPanel = this.getMenuPanel();",
                    "",
                    "dashboardBtn.toggle(false);",
                    "managementBtn.toggle(false);",
                    "userManagementBtn.toggle(false);",
                    "monitoringBtn.toggle(true);",
                    "",
                    "centerContainer.layout.setActiveItem(2);",
                    "",
                    "Ext.Ajax.request({",
                    "    url: 'http://192.168.0.3:8000/render/?width=786&height=508&_salt=1409028000.87&target=vyos.cpu.0.cpu.user.value&from=-2minutes&rawData=true&format=json',",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "",
                    "        var columnData = Ext.decode(response.responseText);",
                    "        var data = columnData[0];",
                    "",
                    "        // Get the quality field from record",
                    "        // Update chart with data",
                    "        var chartList = [];",
                    "        Ext.each(data.datapoints, function (chartData) {",
                    "            var chartCol = {};",
                    "            chartCol.test = chartData.value;",
                    "            chartCol.cate = chartData.date;",
                    "            chartList.push(chartCol);",
                    "        });",
                    "",
                    "        Ext.getCmp('sampleChart').series.getAt(0).setTitle(data.target);",
                    "",
                    "        Ext.getCmp('sampleChart').getStore().loadData(chartList, false);",
                    "",
                    "    }",
                    "});",
                    "",
                    "clearInterval(GlobalData.intervalId1);",
                    "clearInterval(GlobalData.intervalId2);",
                    "clearInterval(GlobalData.intervalId3);"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "6bf02c35-56fb-4c59-bfb1-9bc9737448be"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userManagementBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "onUserManagementBtnBtnClick",
                "implHandler": [
                    "",
                    "/**",
                    " * Main View 메뉴 버튼 클릭 시 수행되는 function",
                    " */",
                    "var centerContainer = this.getCenterContainer(),",
                    "    dashboardBtn = this.getDashboardBtn(),",
                    "    managementBtn = this.getManagementBtn(),",
                    "    monitoringBtn = this.getMonitoringBtn(),",
                    "    userManagementBtn = this.getUserManagementBtn(),",
                    "    menuPanel = this.getMenuPanel();",
                    "",
                    "// 현재 선택된 item이 dashboardPanel일 경우 무시한다.",
                    "if (centerContainer.layout.getActiveItem().itemId === \"UserManagementPanel\") {",
                    "    button.toggle(true);",
                    "    return;",
                    "}",
                    "",
                    "dashboardBtn.toggle(false);",
                    "managementBtn.toggle(false);",
                    "monitoringBtn.toggle(false);",
                    "userManagementBtn.toggle(true);",
                    "",
                    "centerContainer.layout.setActiveItem(3);",
                    "",
                    "Ext.getStore(\"UserStore\").getProxy().url = GLOBAL.apiUrlPrefix + \"user/list\";",
                    "Ext.getStore(\"UserStore\").load();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "105907ea-48c8-4a10-bcd9-43102f287fb7"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "menuPanel",
                "selector": "#menuPanel"
            },
            "designerId": "41375451-12ec-4ef5-97bf-e7b6371b1070"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "application"
                ],
                "fn": "init",
                "implHandler": [
                    "var menu = this;",
                    "",
                    "//Dashboard Menu Constants",
                    "Ext.define('menuConstants', {",
                    "    singleton: true,",
                    "    me : menu",
                    "});"
                ]
            },
            "designerId": "94e92669-d94f-4bc6-8adb-42d433cc9168"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mytool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onMytoolClick",
                "implHandler": [
                    "this.renderServerTree();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "116a21f7-754b-43fe-a3b1-bc6b3636870b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "record",
                    "tabIndex"
                ],
                "fn": "viewManagementMenu",
                "implHandler": [
                    "/**",
                    " * NFV Management 메뉴 버튼 클릭 시 수행되는 function",
                    " */",
                    "var centerContainer = this.getCenterContainer(),",
                    "    dashboardBtn = this.getDashboardBtn(),",
                    "    managementBtn = this.getManagementBtn(),",
                    "    monitoringBtn = this.getMonitoringBtn(),",
                    "    userManagementBtn = this.getUserManagementBtn(),",
                    "    menuPanel = this.getMenuPanel();",
                    "",
                    "// 현재 선택된 item이 managementPanel일 경우 무시한다.",
                    "if (centerContainer.layout.getActiveItem().itemId !== \"VmManagementPanel\") {",
                    "",
                    "    managementBtn.toggle(true);",
                    "    dashboardBtn.toggle(false);",
                    "    monitoringBtn.toggle(false);",
                    "    userManagementBtn.toggle(false);",
                    "",
                    "    centerContainer.layout.setActiveItem(1);",
                    "",
                    "    if(record == null) {",
                    "",
                    "        Ext.each(Ext.getCmp(\"listMenuPanel\").store.getRootNode().childNodes, function(rec, idx){",
                    "",
                    "            Ext.each(rec.get(\"children\"), function(cRecord, cIdx) {",
                    "",
                    "                record = cRecord;",
                    "",
                    "                return false;",
                    "",
                    "            });",
                    "",
                    "            if(record != null) {",
                    "",
                    "                var vmRecord = new spider.model.VmHostModel({",
                    "                    id\t\t: record.id,",
                    "                    text\t\t: record.text,",
                    "                    vmhostName\t: record.vmhostName,",
                    "                    vmhost \t\t: record.vmhost",
                    "                });",
                    "",
                    "                vmConstants.me.initVmManagement(vmRecord, tabIndex);",
                    "",
                    "                return false;",
                    "            }",
                    "",
                    "        });",
                    "",
                    "    } else {",
                    "        vmConstants.me.initVmManagement(record, tabIndex);",
                    "    }",
                    "",
                    "",
                    "} else {",
                    "",
                    "    managementBtn.toggle(true);",
                    "",
                    "    var vmDetailTab = Ext.getCmp(\"networkInstanceTabPanel\");",
                    "",
                    "    if(record.get(\"id\") !== vmConstants.selectVmId) {",
                    "",
                    "        vmConstants.me.initVmManagement(record, tabIndex);",
                    "",
                    "    } else if(tabIndex == null && vmDetailTab.getActiveTab() !== vmDetailTab.items.getAt(0)) {",
                    "",
                    "        vmConstants.me.initVmManagement(record, 0);",
                    "",
                    "    } else if(tabIndex != null && vmDetailTab.getActiveTab() !== vmDetailTab.items.getAt(tabIndex)) {",
                    "",
                    "        vmConstants.me.initVmManagement(record, tabIndex);",
                    "    }",
                    "",
                    "}",
                    "",
                    "",
                    "",
                    "    //Ext.getCmp('hostMgmtBtn').fireEvent('click');",
                    "    //Ext.getCmp('utilizationBtn').fireEvent('click');",
                    "",
                    "    //if (Ext.getCmp('hostGridPanel').selModel.selected.length === 0) {",
                    "    //    Ext.getCmp('hostGridPanel').selModel.select(0);",
                    "    //}"
                ]
            },
            "designerId": "1c859520-00c7-486b-a74e-ba5245a70748"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainContainer",
                "designer|targetType": "Ext.container.Container",
                "fn": "onMainContainerActivate",
                "implHandler": [
                    "var listMenuPanel = this.getListMenuPanel();",
                    "var centerContainer = this.getCenterContainer();",
                    "",
                    "centerContainer.layout.setActiveItem(0);",
                    "",
                    "/**",
                    " * Expand-All Image click event를 catch 하도록 설정",
                    " */",
                    "this.getExpandImg().getEl().on('click', function() {",
                    "    listMenuPanel.expandAll();",
                    "});",
                    "",
                    "/**",
                    " * Collapse-All Image click event를 catch 하도록 설정",
                    " */",
                    "this.getCollapseImg().getEl().on('click', function() {",
                    "    listMenuPanel.collapseAll();",
                    "});",
                    "",
                    "this.renderServerTree();",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "designerId": "53c34135-0089-4612-9810-95bb84d74570"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#lnbLocationCombo",
                "designer|targetType": "Ext.form.field.ComboBox",
                "fn": "onLnbLocationComboChange",
                "implHandler": [
                    "if(newValue != \"\") {",
                    "    Ext.getCmp(\"locationLabel\").setText(newValue);",
                    "    ",
                    "    menuConstants.me.renderServerTree();",
                    "}"
                ],
                "name": "change",
                "scope": "me"
            },
            "designerId": "e98f6ecd-e9b0-4c1e-a400-77eafe176df5"
        }
    ]
}