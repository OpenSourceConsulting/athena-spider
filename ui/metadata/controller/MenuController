{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MenuController"
    },
    "designerId": "c34b50b2-314d-45d8-8b91-b2a4bf025973",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "expandImg",
                "selector": "#expandImg"
            },
            "designerId": "557a97d4-8fce-491b-9217-2b647bc3cd13"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "collapseImg",
                "selector": "#collapseImg"
            },
            "designerId": "71441f8e-660c-44bc-94b4-77f37c13242f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "listMenuPanel",
                "selector": "#listMenuPanel"
            },
            "designerId": "4ded5d34-22f0-429e-b020-74f6a3f1cdf6"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "dashboardBtn",
                "selector": "#dashboardBtn"
            },
            "designerId": "91e8c976-04f0-4cca-aa45-0179356e2721"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "managementBtn",
                "selector": "#managementBtn"
            },
            "designerId": "1e6e857b-6a0f-416b-9883-5b34daa8307d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "monitoringBtn",
                "selector": "#monitoringBtn"
            },
            "designerId": "f1e96d98-b459-4bb1-92b4-2421767f8aaa"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "centerContainer",
                "selector": "#centerPanel"
            },
            "designerId": "7d8554e4-19c9-4449-b9af-2f409fcad7ee"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "menuPanel",
                "selector": "#menuPanel"
            },
            "designerId": "41375451-12ec-4ef5-97bf-e7b6371b1070"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainViewBtn",
                "selector": "#mainViewBtn"
            },
            "designerId": "2735abb2-b38b-4d5d-9a5f-4a99fbec130a"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onLaunch",
                "implHandler": [
                    "var listMenuPanel = this.getListMenuPanel();",
                    "",
                    "/**",
                    " * Expand-All Image click event를 catch 하도록 설정",
                    " */",
                    "this.getExpandImg().getEl().on('click', function() {",
                    "    listMenuPanel.expandAll();",
                    "});",
                    "",
                    "/**",
                    " * Collapse-All Image click event를 catch 하도록 설정",
                    " */",
                    "this.getCollapseImg().getEl().on('click', function() {",
                    "    listMenuPanel.collapseAll();",
                    "});",
                    "",
                    "this.renderServerTree();",
                    "",
                    "",
                    "//this.renderDashboard();",
                    "/*",
                    "",
                    "Ext.select(\".dashboard-graph-panel\").on('resize', function(panel, w, h) {",
                    "    alert('Panel resized to ' + w + 'x' + h);",
                    "});",
                    "",
                    "",
                    "*/",
                    "",
                    "Ext.Ajax.request({",
                    "    url: 'http://192.168.0.3:8000/render/?width=786&height=508&_salt=1409028000.87&target=vyos.cpu.0.cpu.user.value&from=-2minutes&rawData=true&format=json',",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "",
                    "        var columnData = Ext.decode(response.responseText);",
                    "        var data = columnData[0];",
                    "",
                    "        // Get the quality field from record",
                    "        // Update chart with data",
                    "        var chartList = [];",
                    "        Ext.each(data.datapoints, function (chartData) {",
                    "            var chartCol = {};",
                    "            chartCol.test = chartData.value;",
                    "            chartCol.cate = chartData.date;",
                    "            chartList.push(chartCol);",
                    "        });",
                    "",
                    "        //Ext.getCmp('sampleStore').series.getAt(0).setTitle(data.target);",
                    "",
                    "        Ext.getStore('SampleStore').loadData(chartList, false);",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "3ab9c6dd-78c4-43d7-8c59-10ac1379e55c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#dashboardBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "dashboardClick",
                "implHandler": [
                    "/**",
                    " * Dashboard 메뉴 버튼 클릭 시 수행되는 function",
                    " */",
                    "var centerContainer = this.getCenterContainer(),",
                    "    dashboardBtn = this.getDashboardBtn(),",
                    "    managementBtn = this.getManagementBtn(),",
                    "    monitoringBtn = this.getMonitoringBtn(),",
                    "    mainViewBtn = this.getMainViewBtn(),",
                    "    menuPanel = this.getMenuPanel();",
                    "",
                    "// 현재 선택된 item이 dashboardPanel일 경우 무시한다.",
                    "if (centerContainer.layout.getActiveItem().itemId === \"dashboardPanel\") {",
                    "    dashboardBtn.toggle(true);",
                    "    return;",
                    "}",
                    "",
                    "dashboardBtn.toggle(true);",
                    "managementBtn.toggle(false);",
                    "monitoringBtn.toggle(false);",
                    "mainViewBtn.toggle(false);",
                    "",
                    "centerContainer.layout.setActiveItem(0);",
                    "",
                    "//this.renderDashboard();",
                    "clearInterval(GlobalData.intervalId1);",
                    "clearInterval(GlobalData.intervalId2);",
                    "clearInterval(GlobalData.intervalId3);",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "7862fefd-2324-467c-8bbe-98fadd34b1e3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#managementBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "managementClick",
                "implHandler": [
                    "/**",
                    " * NFV Management 메뉴 버튼 클릭 시 수행되는 function",
                    " */",
                    "var centerContainer = this.getCenterContainer(),",
                    "    dashboardBtn = this.getDashboardBtn(),",
                    "    managementBtn = this.getManagementBtn(),",
                    "    monitoringBtn = this.getMonitoringBtn(),",
                    "    mainViewBtn = this.getMainViewBtn(),",
                    "    menuPanel = this.getMenuPanel();",
                    "",
                    "// 현재 선택된 item이 managementPanel일 경우 무시한다.",
                    "if (centerContainer.layout.getActiveItem().itemId === \"managementPanel\") {",
                    "    managementBtn.toggle(true);",
                    "    return;",
                    "}",
                    "",
                    "managementBtn.toggle(true);",
                    "dashboardBtn.toggle(false);",
                    "monitoringBtn.toggle(false);",
                    "mainViewBtn.toggle(false);",
                    "",
                    "Ext.getCmp('monitoringBtn').toggle(false);",
                    "",
                    "centerContainer.layout.setActiveItem(1);",
                    "",
                    "vmConstants.me.initVmManagement();",
                    "//Ext.getCmp('hostMgmtBtn').fireEvent('click');",
                    "//Ext.getCmp('utilizationBtn').fireEvent('click');",
                    "",
                    "//if (Ext.getCmp('hostGridPanel').selModel.selected.length === 0) {",
                    "//    Ext.getCmp('hostGridPanel').selModel.select(0);",
                    "//}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "aeefa9d9-b501-4f10-950f-086d22916bcf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "renderServerTree",
                "implHandler": [
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.apiUrlPrefix + 'mon/vmhost/_all',",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "",
                    "        var hostDatas = Ext.decode(response.responseText);",
                    "",
                    "        if(hostDatas != null) {",
                    "",
                    "            var vmDatas = null;",
                    "",
                    "            Ext.Ajax.request({",
                    "                url: GLOBAL.apiUrlPrefix + 'mon/vm/_all',",
                    "                disableCaching : true,",
                    "                success: function(vmResponse){",
                    "",
                    "                    vmDatas = Ext.decode(vmResponse.responseText);",
                    "",
                    "                    Ext.each(hostDatas, function(host, index) {",
                    "",
                    "                        host.text = host.name;",
                    "                        host.icon = 'resources/images/icons/server.png';",
                    "                        if(index == 0) {",
                    "                            host.expanded = true;",
                    "                        }",
                    "",
                    "                        var vmList = [];",
                    "                        Ext.each(vmDatas, function(vm) {",
                    "",
                    "                            if(host._id == vm.vmhost) {",
                    "",
                    "                                vm.text = vm.name;",
                    "                                vm.icon = 'resources/images/icons/host.png';",
                    "                                vm.leaf = true;",
                    "                                vmList.push(vm);",
                    "                            }",
                    "                        });",
                    "",
                    "                        if(vmList.length > 0) {",
                    "",
                    "                            host.leaf = false;",
                    "                            host.children = vmList;",
                    "",
                    "                        } else {",
                    "",
                    "                            host.leaf = true;",
                    "",
                    "                        }",
                    "",
                    "                    });",
                    "",
                    "                    var treeStore = Ext.create('Ext.data.TreeStore', {",
                    "                            storeId: 'spider.model.VmHostModel',",
                    "                            root: {",
                    "                                expanded: true,",
                    "                                text: 'Server List',",
                    "                                icon : '',",
                    "                                children: hostDatas",
                    "                            }",
                    "                        });",
                    "",
                    "                    Ext.getCmp(\"listMenuPanel\").bindStore(treeStore);",
                    "",
                    "                    dashboardConstants.me.renderDashboard();",
                    "",
                    "                }",
                    "            });",
                    "        }",
                    "",
                    "    }",
                    "});",
                    "",
                    ""
                ]
            },
            "designerId": "03696245-2804-465c-8325-eb64fad6960b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "renderDashboard",
                "implHandler": [
                    "",
                    "var dashboardPanel = Ext.getCmp('DashboardPanel');",
                    "",
                    "dashboardPanel.setLoading(true);",
                    "",
                    "var dashboardPanels = [];",
                    "var dashboardFieldSets = [];",
                    "",
                    "var titles = ['kh-j-nfv-host-01-ncia.go.kr','kh-j-nfv-host-02-ncia.go.kr','kh-j-nfv-host-03-ncia.go.kr','kh-j-nfv-host-04-ncia.go.kr',",
                    "              'kh-j-nfv-host-05-ncia.go.kr','kh-j-nfv-host-06-ncia.go.kr','kh-j-nfv-host-07-ncia.go.kr','kh-j-nfv-host-08-ncia.go.kr'];",
                    "var currentInbounds = ['23.12 kbps','12.13 kbps','8.45 kbps','3.14 kbps','54.34 kbps','5.23 kbps','2.34 kbps','1.81 kbps'];",
                    "var averageInbounds = ['1.81 kbps','23.12 kbps','12.13 kbps','8.45 kbps','3.14 kbps','54.34 kbps','5.23 kbps','2.34 kbps'];",
                    "var peakInbounds = ['12.13 kbps','8.45 kbps','3.14 kbps','54.34 kbps','5.23 kbps','2.34 kbps','1.81 kbps','23.12 kbps'];",
                    "var currentOutbounds = ['12.13 kbps','8.45 kbps','3.14 kbps','54.34 kbps','5.23 kbps','2.34 kbps','1.81 kbps','23.12 kbps'];",
                    "var averageOutbounds = ['23.12 kbps','12.13 kbps','8.45 kbps','3.14 kbps','54.34 kbps','5.23 kbps','2.34 kbps','1.81 kbps'];",
                    "var peakOutbounds = ['1.81 kbps','23.12 kbps','12.13 kbps','8.45 kbps','3.14 kbps','54.34 kbps','5.23 kbps','2.34 kbps'];",
                    "",
                    "var serverNames = [['NFV Guest 11','NFV Guest 12','NFV Guest 13','NFV Guest 14'],",
                    "                   ['NFV Guest 21','NFV Guest 22','NFV Guest 23','NFV Guest 24'],",
                    "                   ['NFV Guest 31','NFV Guest 32','NFV Guest 33','NFV Guest 34'],",
                    "                   ['NFV Guest 41','NFV Guest 42','NFV Guest 43','NFV Guest 44'],",
                    "                   ['NFV Guest 51','NFV Guest 52','NFV Guest 53','NFV Guest 54'],",
                    "                   ['NFV Guest 61','NFV Guest 62','NFV Guest 63','NFV Guest 64'],",
                    "                   ['NFV Guest 71','NFV Guest 72','NFV Guest 73','NFV Guest 74'],",
                    "                   ['NFV Guest 81','NFV Guest 82','NFV Guest 83','NFV Guest 84']];",
                    "",
                    "var cpuStats =    [['01','02','03','04'],",
                    "                   ['05','01','02','03'],",
                    "                   ['04','05','01','02'],",
                    "                   ['03','04','05','01'],",
                    "                   ['02','03','04','05'],",
                    "                   ['01','02','03','04'],",
                    "                   ['05','01','02','03'],",
                    "                   ['04','05','01','02']];",
                    "",
                    "var memoryStats = [['03','04','05','01'],",
                    "                   ['02','03','04','05'],",
                    "                   ['01','02','03','04'],",
                    "                   ['01','02','03','04'],",
                    "                   ['05','01','02','03'],",
                    "                   ['04','05','01','02'],",
                    "                   ['05','01','02','03'],",
                    "                   ['04','05','01','02']];",
                    "",
                    "for (var i = 0; i < 2; i++) {",
                    "    dashboardPanels.push(",
                    "        Ext.create('Ext.panel.Panel', {",
                    "            requires: [",
                    "                'Ext.form.FieldSet',",
                    "                'Ext.panel.Panel',",
                    "                'Ext.form.Label'",
                    "            ],",
                    "            layout: 'anchor',",
                    "            columnWidth: 0.5",
                    "        })",
                    "    );",
                    "}",
                    "",
                    "for (var i = 0; i < titles.length; i++) {",
                    "    dashboardFieldSets.push(",
                    "        Ext.create('Ext.form.FieldSet', {",
                    "            margin: '5 5 5 5',",
                    "            collapsible: true,",
                    "            title: titles[i],",
                    "            layout: {",
                    "                type: 'hbox',",
                    "                align: 'stretch'",
                    "            }",
                    "        })",
                    "    );",
                    "",
                    "    if (i % 2 === 0) {",
                    "        dashboardPanels[0].add(dashboardFieldSets[i]);",
                    "    } else {",
                    "        dashboardPanels[1].add(dashboardFieldSets[i]);",
                    "    }",
                    "}",
                    "",
                    "for (var i = 0; i < titles.length; i++) {",
                    "    var panels = [];",
                    "",
                    "    for (var j = 0; j < 7; j++) {",
                    "        if (j === 3) {",
                    "            panels.push(",
                    "                Ext.create('Ext.panel.Panel', {",
                    "                    width: 50",
                    "                })",
                    "            );",
                    "        } else {",
                    "            panels.push(",
                    "                Ext.create('Ext.panel.Panel', {",
                    "                    flex: 1,",
                    "                    layout: {",
                    "                        type: 'vbox',",
                    "                        align: 'stretch'",
                    "                    }",
                    "                })",
                    "            );",
                    "",
                    "            if (j === 0) {",
                    "                var diff = serverNames[i].length - 4 + 2;",
                    "",
                    "                if (diff < 1) {",
                    "                    diff = 1;",
                    "                }",
                    "",
                    "                for (var k = 0; k < diff; k++) {",
                    "                    panels[j].add(",
                    "                        Ext.create('Ext.form.Label', {",
                    "                            flex: 1,",
                    "                            html: '<center><b></b></center>',",
                    "                            style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}'",
                    "                        })",
                    "                    );",
                    "                }",
                    "",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        html: '<center><b>Current</b></center>',",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;}'",
                    "                    })",
                    "                );",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        html: '<center><b>Average</b></center>',",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;}'",
                    "                    })",
                    "                );",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        html: '<center><b>Peak</b></center>',",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;}'",
                    "                    })",
                    "                );",
                    "            } else if (j === 1) {",
                    "                var diff = serverNames[i].length - 4 + 1;",
                    "                for (var k = 0; k < diff; k++) {",
                    "                    panels[j].add(",
                    "                        Ext.create('Ext.form.Label', {",
                    "                            flex: 1,",
                    "                            html: '<center><b></b></center>',",
                    "                            style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}'",
                    "                        })",
                    "                    );",
                    "                }",
                    "",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        html: '<center><b>Inbound</b></center>',",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;}'",
                    "                    })",
                    "                );",
                    "",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}',",
                    "                        text: currentInbounds[i]",
                    "                    })",
                    "                );",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}',",
                    "                        text: averageInbounds[i]",
                    "                    })",
                    "                );",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}',",
                    "                        text: peakInbounds[i]",
                    "                    })",
                    "                );",
                    "            } else if (j === 2) {",
                    "                var diff = serverNames[i].length - 4 + 1;",
                    "                for (var k = 0; k < diff; k++) {",
                    "                    panels[j].add(",
                    "                        Ext.create('Ext.form.Label', {",
                    "                            flex: 1,",
                    "                            html: '<center><b></b></center>',",
                    "                            style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}'",
                    "                        })",
                    "                    );",
                    "                }",
                    "",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        html: '<center><b>Outbound</b></center>',",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;}'",
                    "                    })",
                    "                );",
                    "",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}',",
                    "                        text: currentOutbounds[i]",
                    "                    })",
                    "                );",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}',",
                    "                        text: averageOutbounds[i]",
                    "                    })",
                    "                );",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}',",
                    "                        text: peakOutbounds[i]",
                    "                    })",
                    "                );",
                    "            } else if (j === 4) {",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        html: '<center><b></b></center>',",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}'",
                    "                    })",
                    "                );",
                    "            } else if (j === 5) {",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        html: '<center><b>CPU</b></center>',",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}'",
                    "                    })",
                    "                );",
                    "            } else if (j === 6) {",
                    "                panels[j].add(",
                    "                    Ext.create('Ext.form.Label', {",
                    "                        flex: 1,",
                    "                        html: '<center><b>Memory</b></center>',",
                    "                        style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}'",
                    "                    })",
                    "                );",
                    "            }",
                    "        }",
                    "    }",
                    "",
                    "    var len = serverNames[i].length;",
                    "    for (var k = 0; k < len; k++) {",
                    "        panels[4].add(",
                    "            Ext.create('Ext.form.Label', {",
                    "                flex: 1,",
                    "                style: '{display:inline-block;padding-top:10px;height: 36px;text-align:center;}',",
                    "                text: serverNames[i][k]",
                    "            })",
                    "        );",
                    "",
                    "        panels[5].add(",
                    "            Ext.create('Ext.form.Label', {",
                    "                flex: 1,",
                    "                html: '<center><img src=\"resources/images/icons/status_' + cpuStats[i][k] + '.png\" width=\"36\" height=\"36\" border=\"0\"></center>',",
                    "                style: '{text-align: center;}'",
                    "            })",
                    "        );",
                    "",
                    "        panels[6].add(",
                    "            Ext.create('Ext.form.Label', {",
                    "                flex: 1,",
                    "                html: '<center><img src=\"resources/images/icons/status_' + memoryStats[i][k] + '.png\" width=\"36\" height=\"36\" border=\"0\"></center>',",
                    "                style: '{text-align: center;}'",
                    "            })",
                    "        );",
                    "    }",
                    "",
                    "    dashboardFieldSets[i].add(panels);",
                    "}",
                    "",
                    "dashboardPanel.removeAll();",
                    "dashboardPanel.add(dashboardPanels);",
                    "",
                    "dashboardPanel.setLoading(false);",
                    "",
                    "",
                    ""
                ]
            },
            "designerId": "189dc96b-a674-4338-910b-1153acb0c4e3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#monitoringBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "onMonitoringBtnClick",
                "implHandler": [
                    "",
                    "/**",
                    " * Sample 메뉴 버튼 클릭 시 수행되는 function",
                    " */",
                    "var centerContainer = this.getCenterContainer(),",
                    "    dashboardBtn = this.getDashboardBtn(),",
                    "    managementBtn = this.getManagementBtn(),",
                    "    monitoringBtn = this.getMonitoringBtn(),",
                    "    mainViewBtn = this.getMainViewBtn(),",
                    "    menuPanel = this.getMenuPanel();",
                    "",
                    "// 현재 선택된 item이 dashboardPanel일 경우 무시한다.",
                    "if (centerContainer.layout.getActiveItem().itemId === \"samplePanel\") {",
                    "    button.toggle(true);",
                    "    return;",
                    "}",
                    "",
                    "dashboardBtn.toggle(false);",
                    "managementBtn.toggle(false);",
                    "mainViewBtn.toggle(false);",
                    "monitoringBtn.toggle(true);",
                    "",
                    "centerContainer.layout.setActiveItem(2);",
                    "",
                    "Ext.Ajax.request({",
                    "    url: 'http://192.168.0.3:8000/render/?width=786&height=508&_salt=1409028000.87&target=vyos.cpu.0.cpu.user.value&from=-2minutes&rawData=true&format=json',",
                    "    disableCaching : true,",
                    "    success: function(response){",
                    "",
                    "        var columnData = Ext.decode(response.responseText);",
                    "        var data = columnData[0];",
                    "",
                    "        // Get the quality field from record",
                    "        // Update chart with data",
                    "        var chartList = [];",
                    "        Ext.each(data.datapoints, function (chartData) {",
                    "            var chartCol = {};",
                    "            chartCol.test = chartData.value;",
                    "            chartCol.cate = chartData.date;",
                    "            chartList.push(chartCol);",
                    "        });",
                    "",
                    "        Ext.getCmp('sampleChart').series.getAt(0).setTitle(data.target);",
                    "",
                    "        Ext.getCmp('sampleChart').getStore().loadData(chartList, false);",
                    "",
                    "    }",
                    "});",
                    "",
                    "clearInterval(GlobalData.intervalId1);",
                    "clearInterval(GlobalData.intervalId2);",
                    "clearInterval(GlobalData.intervalId3);"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "6bf02c35-56fb-4c59-bfb1-9bc9737448be"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainViewBtn",
                "designer|targetType": "Ext.button.Button",
                "fn": "onMainViewBtnClick",
                "implHandler": [
                    "",
                    "/**",
                    " * Main View 메뉴 버튼 클릭 시 수행되는 function",
                    " */",
                    "var centerContainer = this.getCenterContainer(),",
                    "    dashboardBtn = this.getDashboardBtn(),",
                    "    managementBtn = this.getManagementBtn(),",
                    "    monitoringBtn = this.getMonitoringBtn(),",
                    "    mainViewBtn = this.getMainViewBtn(),",
                    "    menuPanel = this.getMenuPanel();",
                    "",
                    "// 현재 선택된 item이 dashboardPanel일 경우 무시한다.",
                    "if (centerContainer.layout.getActiveItem().itemId === \"samplePanel\") {",
                    "    button.toggle(true);",
                    "    return;",
                    "}",
                    "",
                    "dashboardBtn.toggle(false);",
                    "managementBtn.toggle(false);",
                    "monitoringBtn.toggle(false);",
                    "mainViewBtn.toggle(true);",
                    "",
                    "centerContainer.layout.setActiveItem(3);",
                    "",
                    "clearInterval(GlobalData.intervalId1);",
                    "clearInterval(GlobalData.intervalId2);",
                    "clearInterval(GlobalData.intervalId3);"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "105907ea-48c8-4a10-bcd9-43102f287fb7"
        }
    ]
}