{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "VmHostController"
    },
    "designerId": "3283cfec-d919-4cd8-bb52-ac024c98ec9c",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "application"
                ],
                "fn": "init",
                "implHandler": [
                    "var vmHostTree = this;",
                    "",
                    "var vmHostContextMenu = new Ext.menu.Menu({",
                    "    items:",
                    "    [",
                    "        { text: 'NIC 관리',",
                    "         handler: function() {",
                    "             vmHostTree.viewVmDetail(1);",
                    "         }",
                    "        },",
                    "        { text: 'Bonding',",
                    "         handler: function() {",
                    "             vmHostTree.viewVmDetail(2);",
                    "         }",
                    "        },",
                    "        { text: 'Routing',",
                    "         handler: function() {",
                    "             vmHostTree.viewVmDetail(3);",
                    "         }",
                    "        },",
                    "        { text: 'NAT 관리',",
                    "         handler: function() {",
                    "             vmHostTree.viewVmDetail(4);",
                    "         }",
                    "        },",
                    "        { text: 'DHCP(Service)',",
                    "         handler: function() {",
                    "             vmHostTree.viewVmDetail(5);",
                    "         }",
                    "        },",
                    "        /*{ text: 'DNS(Service)',",
                    "         handler: function() {",
                    "             vmHostTree.viewVmDetail(6);",
                    "         }",
                    "        },*/",
                    "        { text: 'HTTPS/SSH(Service)',",
                    "         handler: function() {",
                    "             vmHostTree.viewVmDetail(7);",
                    "         }",
                    "        },",
                    "        { text: 'System(Service)',",
                    "         handler: function() {",
                    "             vmHostTree.viewVmDetail(8);",
                    "         }",
                    "        },",
                    "        /*{ text: 'Security',",
                    "         handler: function() {",
                    "             vmHostTree.viewVmDetail(9);",
                    "         }",
                    "        },*/",
                    "        { text: 'Firewall',",
                    "         handler: function() {",
                    "             vmHostTree.viewVmDetail(10);",
                    "         }",
                    "        },",
                    "        { text: 'CLI',",
                    "         handler: function() {",
                    "             vmHostTree.viewVmDetail(12);",
                    "         }",
                    "        },",
                    "        {",
                    "            xtype: 'menuseparator'",
                    "        },",
                    "        { text: 'VM 시작',",
                    "         handler: function() {",
                    "             vmHostTree.controlVm('start');",
                    "         }",
                    "        },",
                    "        { text: 'VM 정지',",
                    "         handler: function() {",
                    "             vmHostTree.controlVm('shutdown');",
                    "         }",
                    "        },",
                    "        { text: 'VM 삭제',",
                    "         handler: function() {",
                    "             vmHostTree.deleteVm();",
                    "         }",
                    "        }",
                    "    ]",
                    "",
                    "});",
                    "",
                    "//VM Host Tree Constants",
                    "Ext.define('vmHostConstants', {",
                    "    singleton: true,",
                    "    me : vmHostTree,",
                    "",
                    "    contextMenu: vmHostContextMenu,",
                    "    selectRecord : null,",
                    "    actionRecord : null,",
                    "    vmStatus : null,",
                    "    ",
                    "    chartInterval : null",
                    "    ",
                    "});"
                ]
            },
            "designerId": "41ca8b61-0d4f-4c20-85b8-41ed09d9d752"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "popAddVMHostWindow",
                "implHandler": [
                    "//VM Host 생성 팝업 호출",
                    "",
                    "var popWindow = Ext.create(\"widget.AddVmHostWindow\");",
                    "popWindow.show();"
                ]
            },
            "designerId": "83cf192e-5325-4af7-b31d-4cc82152576f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#listMenuPanel",
                "designer|targetType": "Ext.tree.Panel",
                "fn": "onListMenuPanelBeforeItemContextMenu",
                "implHandler": [
                    "",
                    "if(record.get(\"type\") === 'vm') {",
                    "",
                    "    var position = e.getXY();",
                    "    e.stopEvent();",
                    "",
                    "    vmHostConstants.actionRecord = record;",
                    "",
                    "    Ext.Ajax.request({",
                    "        url: GLOBAL.apiUrlPrefix + 'mon/vm/' + record.get(\"vmhost\") + \"/\" + record.get(\"text\") + \"/status\",",
                    "        method : 'GET',",
                    "        disableCaching : true,",
                    "        success: function(response){",
                    "",
                    "            var data = Ext.JSON.decode(response.responseText);",
                    "",
                    "            vmHostConstants.vmStatus = data[0].clone_state;",
                    "",
                    "            if(data.length === 0 || data[0].state.toLowerCase() === \"running\") {",
                    "                vmHostConstants.contextMenu.items.items[10].setDisabled(true);",
                    "                vmHostConstants.contextMenu.items.items[11].setDisabled(false);",
                    "                vmHostConstants.contextMenu.items.items[12].setDisabled(true);",
                    "            } else {",
                    "                vmHostConstants.contextMenu.items.items[10].setDisabled(false);",
                    "                vmHostConstants.contextMenu.items.items[11].setDisabled(true);",
                    "                vmHostConstants.contextMenu.items.items[12].setDisabled(false);",
                    "            }",
                    "",
                    "            vmHostConstants.contextMenu.showAt(position);",
                    "",
                    "        },",
                    "        failure: function (response) {",
                    "",
                    "            vmHostConstants.contextMenu.items.items[13].setDisabled(true);",
                    "            vmHostConstants.contextMenu.showAt(position);",
                    "",
                    "        }",
                    "    });",
                    "",
                    "",
                    "} else {",
                    "    e.stopEvent();",
                    "}"
                ],
                "name": "beforeitemcontextmenu",
                "scope": "me"
            },
            "designerId": "2fa462c4-1f46-47f7-ba0f-3f9ee4e1a422"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#listMenuPanel",
                "designer|targetType": "Ext.tree.Panel",
                "fn": "onListMenuPanelItemClick",
                "implHandler": [
                    "if(record.get(\"type\") === 'vmhost') {",
                    "    this.popVMHostInfoWindow(record);",
                    "} else {",
                    "    menuConstants.me.viewManagementMenu(record);",
                    "}"
                ],
                "name": "itemclick",
                "scope": "me"
            },
            "designerId": "51565ac2-914a-4c28-b687-9c60a1b25801"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "record"
                ],
                "fn": "popVMHostInfoWindow",
                "implHandler": [
                    "//VM Host Info 팝업 호출",
                    "",
                    "vmHostConstants.selectRecord = record;",
                    "",
                    "var popWindow = Ext.create(\"widget.VMHostInfoWindow\");",
                    "popWindow.show();",
                    "",
                    "popWindow.down(\"#VmHostName\").setText(record.get(\"text\"));",
                    "",
                    "var viewVmHostForm = Ext.getCmp(\"viewVmHostForm\");",
                    "",
                    "viewVmHostForm.getForm().reset();",
                    "viewVmHostForm.getForm().waitMsgTarget = viewVmHostForm.getEl();",
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.apiUrlPrefix + 'mon/vmhost/' + record.get(\"id\") + \"?detail=true\",",
                    "    method : 'GET',",
                    "    disableCaching : true,",
                    "    waitMsg: 'Loading...',",
                    "    success: function(response){",
                    "",
                    "        var data = Ext.JSON.decode(response.responseText);",
                    "",
                    "        if(data.length > 0) {",
                    "",
                    "            var hostData = data[0];",
                    "            var form = viewVmHostForm.getForm();",
                    "",
                    "            form.setValues(data[0]);",
                    "",
                    "            //하드웨어 정보",
                    "            var coreSocket = \"0\";",
                    "            var coreThread = \"0\";",
                    "            Ext.each(hostData.info, function(cpu){",
                    "",
                    "                if(cpu.name === \"CPU model\")",
                    "                    form.findField(\"cpuModel\").setValue(cpu.value);",
                    "",
                    "                else if(cpu.name === \"CPU(s)\")",
                    "                    form.findField(\"cpus\").setValue(cpu.value);",
                    "",
                    "                else if(cpu.name === \"CPU socket(s)\")",
                    "                    form.findField(\"cpuSocket\").setValue(cpu.value);",
                    "",
                    "                else if(cpu.name === \"Core(s) per socket\")",
                    "                    coreSocket = cpu.value;",
                    "",
                    "                else if(cpu.name === \"Thread(s) per core\")",
                    "                    coreThread = cpu.value;",
                    "",
                    "                else if(cpu.name === \"Memory size\")",
                    "                    form.findField(\"memSize\").setValue(cpu.value);",
                    "",
                    "            });",
                    "",
                    "            form.findField(\"cpuCore\").setValue(coreSocket + \"/\" + coreThread);",
                    "",
                    "            //Interface 정보",
                    "            Ext.getStore(\"VmHostInterfaceStore\").loadData(hostData.interfaces, false);",
                    "",
                    "            //VM정보",
                    "            Ext.each(hostData.version, function(vm){",
                    "",
                    "                if(vm.name === \"Running hypervisor\")",
                    "                    form.findField(\"hypervisor\").setValue(vm.value);",
                    "",
                    "                else if(vm.name === \"Using API\")",
                    "                    form.findField(\"vmApi\").setValue(vm.value);",
                    "",
                    "                else if(vm.name === \"Using library\")",
                    "                    form.findField(\"useLib\").setValue(vm.value);",
                    "",
                    "            });",
                    "",
                    "",
                    "        }",
                    "    }",
                    "});",
                    "",
                    "",
                    "this.setVmHostMonitoringChart(popWindow, record);",
                    "",
                    "clearInterval(vmHostConstants.chartInterval);",
                    "",
                    "vmHostConstants.chartInterval = setInterval(function() {",
                    "    ",
                    "    vmHostConstants.me.setVmHostMonitoringChart(popWindow, record);",
                    "    ",
                    "}, 10000);",
                    ""
                ]
            },
            "designerId": "556caaa4-03e5-4970-b156-48844a434cca"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "createVMHost",
                "implHandler": [
                    "var addVmHostForm = Ext.getCmp(\"addVmHostForm\");",
                    "",
                    "if(addVmHostForm.isValid()) {",
                    "",
                    "    var sendData = addVmHostForm.getForm().getFieldValues();",
                    "",
                    "     Ext.Ajax.request({",
                    "         url: GLOBAL.apiUrlPrefix + \"vmhost\",",
                    "         method: \"POST\",",
                    "         headers : {",
                    "             \"Content-Type\" : \"application/json\"",
                    "         },",
                    "         waitMsg: 'Saving Data...',",
                    "         waitMsgTarget : addVmHostForm.getEl(),",
                    "         thimeout : 60000,",
                    "         jsonData: sendData,",
                    "         success: function (response) {",
                    "",
                    "             if(response.status == 200) {",
                    "",
                    "                 Ext.Msg.alert('Success', '등록이 완료되었습니다.');",
                    "",
                    "                 menuConstants.me.renderServerTree();",
                    "                 addVmHostForm.up('window').close();",
                    "",
                    "             }",
                    "",
                    "        },",
                    "        failure: function (response) {",
                    "            Ext.Msg.alert('Failure', response.responseText.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />'));",
                    "        }",
                    "     });",
                    "",
                    "}",
                    ""
                ]
            },
            "designerId": "424279e2-7753-4fcb-97d8-10dac0bfe5c0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "deleteVmHost",
                "implHandler": [
                    "",
                    "Ext.MessageBox.confirm('Confirm', 'VM Host를 삭제 하시겠습니까?', function(btn){",
                    "",
                    "    if(btn == \"yes\"){",
                    "",
                    "        Ext.Ajax.request({",
                    "            url: GLOBAL.apiUrlPrefix + \"vmhost/\" + vmHostConstants.selectRecord.get(\"id\"),",
                    "            method : \"DELETE\",",
                    "            disableCaching : true,",
                    "            waitMsg: 'Delete VM Host...',",
                    "            success: function(response){",
                    "",
                    "                if(response.status == 200) {",
                    "",
                    "                    Ext.Msg.alert('Success', '삭제가 완료되었습니다.');",
                    "",
                    "                    menuConstants.me.renderServerTree();",
                    "                    button.up('window').close();",
                    "",
                    "                }",
                    "",
                    "            }",
                    "        });",
                    "    }",
                    "",
                    "});",
                    ""
                ]
            },
            "designerId": "225be53e-7860-42cf-857f-57b993020df7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#VMHostInfoWindow",
                "designer|targetType": "Ext.window.Window",
                "fn": "onVMHostInfoWindowClose",
                "implHandler": [
                    "clearInterval(vmHostConstants.intervalId1);"
                ],
                "name": "close",
                "scope": "me"
            },
            "designerId": "ded034ad-ff8d-4777-876a-07db09515f85"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "popAddVmWindow",
                "implHandler": [
                    "//VM 생성 팝업 호출",
                    "var popWindow = Ext.create(\"widget.AddVmWindow\");",
                    "popWindow.show();",
                    "",
                    "Ext.getCmp(\"addVmForm\").getForm().findField(\"vmhostId\").setValue(vmHostConstants.selectRecord.get(\"id\"));",
                    "Ext.getCmp(\"addVmForm\").getForm().findField(\"vmhostName\").setValue(vmHostConstants.selectRecord.get(\"text\"));",
                    "",
                    "var comboStore = Ext.getStore(\"ComboVmTemplateStore\");",
                    "comboStore.getProxy().url = GLOBAL.apiUrlPrefix + 'vm/templatelist/' + vmHostConstants.selectRecord.get(\"id\");",
                    ""
                ]
            },
            "designerId": "d15db7cd-2a01-4c8a-a82c-80615fbddb8e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "createVM",
                "implHandler": [
                    "var addVmForm = Ext.getCmp(\"addVmForm\");",
                    "",
                    "if(addVmForm.isValid()) {",
                    "",
                    "    var sendData = addVmForm.getForm().getFieldValues();",
                    "",
                    "    Ext.Ajax.request({",
                    "         url: GLOBAL.apiUrlPrefix + \"vm/clone\",",
                    "         method: \"POST\",",
                    "         headers : {",
                    "             \"Content-Type\" : \"application/json\"",
                    "         },",
                    "         waitMsg: 'Saving Data...',",
                    "         waitMsgTarget : addVmForm.getEl(),",
                    "         jsonData: sendData,",
                    "         success: function (response) {",
                    "",
                    "             if(response.status == 200) {",
                    "",
                    "                 Ext.Msg.alert('Success', '등록이 완료되었습니다.');",
                    "",
                    "                 menuConstants.me.renderServerTree();",
                    "                 addVmForm.up('window').close();",
                    "",
                    "             }",
                    "",
                    "        },",
                    "        failure: function (response) {",
                    "            Ext.Msg.alert('Failure', response.responseText.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />'));",
                    "        }",
                    "    });",
                    "",
                    "}",
                    ""
                ]
            },
            "designerId": "1f7d6385-bbba-40b9-aad0-764e824bda93"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "flag"
                ],
                "fn": "controlVm",
                "implHandler": [
                    "if(flag == 'start') {",
                    "",
                    "    if(vmHostConstants.vmStatus == 'error') {",
                    "        Ext.Msg.alert('Fail', 'VM 복제 중 에러가 발생하여 VM을 시작할 수 없습니다.');",
                    "        return;",
                    "    } else if(vmHostConstants.vmStatus == 'cloning') {",
                    "        Ext.Msg.alert('Fail', 'VM 복제가 진행중입니다. 잠시 후 다시 실행하여 주십시오.');",
                    "        return;",
                    "    }",
                    "",
                    "}",
                    "",
                    "var confirmMessage;",
                    "if(flag == 'start') {",
                    "    confirmMessage = 'VM을 시작 하시겠습니까?';",
                    "} else {",
                    "    confirmMessage = 'VM을 정지 하시겠습니까?';",
                    "}",
                    "",
                    "Ext.MessageBox.confirm('Confirm', confirmMessage, function(btn){",
                    "",
                    "    if(btn == \"yes\"){",
                    "        ",
                    "        Ext.Ajax.request({",
                    "            url: GLOBAL.apiUrlPrefix + \"vm/\" + flag + \"/\"",
                    "                          + vmHostConstants.actionRecord.get(\"vmhost\") + \"/\" + vmHostConstants.actionRecord.get(\"text\"),",
                    "            disableCaching : true,",
                    "            waitMsg: flag + ' VM...',",
                    "            success: function(response){",
                    "",
                    "                if(response.status == 200) {",
                    "",
                    "                    if(flag == 'start') {",
                    "                        Ext.Msg.alert('Success', 'VM 시작 요청이 완료되었습니다.');",
                    "                    } else {",
                    "                        Ext.Msg.alert('Success', 'VM 정지 요청이 완료되었습니다.');",
                    "                    }",
                    "                    ",
                    "                    if (Ext.getCmp(\"centerPanel\").layout.getActiveItem().itemId === \"VmManagementPanel\") {",
                    "                        if(flag == 'start') {",
                    "                            Ext.getCmp('startVmBtn').setDisabled(true);",
                    "                        } else {",
                    "                            Ext.getCmp('stopVmBtn').setDisabled(true);",
                    "                        }",
                    "                        ",
                    "                        clearInterval(vmConstants.statusInterval);",
                    "                        vmConstants.statusInterval = setInterval(function() {",
                    "                            vmConstants.me.setVmStatus();",
                    "                        }, 10000);",
                    "                    }",
                    "",
                    "",
                    "                }",
                    "",
                    "            }",
                    "        });",
                    "    }",
                    "",
                    "});",
                    ""
                ]
            },
            "designerId": "9a3a0d5d-943f-430a-b109-e39be99d4967"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "tabIndex"
                ],
                "fn": "viewVmDetail",
                "implHandler": [
                    "menuConstants.me.viewManagementMenu(vmHostConstants.actionRecord, tabIndex);"
                ]
            },
            "designerId": "4d75fff5-9083-4f86-ad4e-a94a2b16f258"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteVm",
                "implHandler": [
                    "",
                    "Ext.MessageBox.confirm('Confirm', 'VM을 삭제 하시겠습니까?', function(btn){",
                    "",
                    "    if(btn == \"yes\"){",
                    "",
                    "        Ext.Ajax.request({",
                    "            url: GLOBAL.apiUrlPrefix + \"vm/\" + vmHostConstants.actionRecord.get(\"id\"),",
                    "            method : \"DELETE\",",
                    "            disableCaching : true,",
                    "            waitMsg: 'Delete VM...',",
                    "            success: function(response){",
                    "",
                    "                if(response.status == 200) {",
                    "",
                    "                    Ext.Msg.alert('Success', '삭제가 완료되었습니다.', function() {",
                    "                        ",
                    "                        menuConstants.me.renderServerTree();",
                    "                        menuConstants.me.toggleDashboardBtn();",
                    "                    });",
                    "",
                    "                }",
                    "",
                    "            }",
                    "        });",
                    "    }",
                    "",
                    "});",
                    ""
                ]
            },
            "designerId": "85bf23ac-c0a1-4037-8664-d69009327295"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "popWindow",
                    "record"
                ],
                "fn": "setVmHostMonitoringChart",
                "implHandler": [
                    "",
                    "",
                    "// CPU, Memory, Network Chart를 위한 변수 설정",
                    "var panel = Ext.getCmp(\"popVmHostInfoPanel\");",
                    "",
                    "var namePanel, cpuPanel, memoryPanel, networkPanel;",
                    "var cpu = 0;",
                    "",
                    "Ext.Ajax.request({",
                    "    url: GLOBAL.apiUrlPrefix + 'mon/graphite/vmhostcpu/' + record.get('id'),",
                    "    method : \"GET\",",
                    "    disableCaching : true,",
                    "    success: function(cpuResponse){",
                    "        ",
                    "        if(cpuResponse.status == 200) {",
                    "            ",
                    "            var cpuData = Ext.JSON.decode(cpuResponse.responseText);",
                    "            ",
                    "            Ext.Ajax.request({",
                    "                url: GLOBAL.apiUrlPrefix + 'mon/graphite/vmhostmem/' + record.get('id'),",
                    "                method : \"GET\",",
                    "                disableCaching : true,",
                    "                success: function(memResponse){",
                    "                    ",
                    "                    if(memResponse.status == 200) {",
                    "                        ",
                    "                        var memData = Ext.JSON.decode(memResponse.responseText);",
                    "                        ",
                    "                        Ext.Ajax.request({",
                    "                            url: GLOBAL.apiUrlPrefix + 'mon/graphite/vmhostnet/' + record.get('id'),",
                    "                            method : \"GET\",",
                    "                            disableCaching : true,",
                    "                            success: function(netResponse){",
                    "                                ",
                    "                                if(netResponse.status == 200) {",
                    "                                    ",
                    "                                    var netData = Ext.JSON.decode(netResponse.responseText);",
                    "                                    ",
                    "                                    var vmKey = Object.keys(cpuData);",
                    "                                    ",
                    "                                    if(vmKey.length > 0) {",
                    "                                        ",
                    "                                        for(var iIdx=panel.down('#vmNamePanel').items.items.length-1; iIdx>1;iIdx--) {",
                    "                                            panel.down('#vmNamePanel').items.items[iIdx].destroy();",
                    "                                            panel.down('#vmCpuPanel').items.items[iIdx].destroy();",
                    "                                            panel.down('#vmMemoryPanel').items.items[iIdx].destroy();",
                    "                                            panel.down('#vmNetworkPanel').items.items[iIdx].destroy();",
                    "                                        }",
                    "                                        ",
                    "                                        Ext.each(vmKey, function(vmId, vIdx) {",
                    "                                            ",
                    "                                            namePanel = panel.down('#vmNamePanel').items.items[1].cloneConfig({itemId : \"vmNamePanel\"+vIdx});",
                    "                                            cpuPanel = panel.down('#vmCpuPanel').items.items[1].cloneConfig({itemId : \"vmCpuPanel\"+vIdx});",
                    "                                            memoryPanel = panel.down('#vmMemoryPanel').items.items[1].cloneConfig({itemId : \"vmMemoryPanel\"+vIdx});",
                    "                                            networkPanel = panel.down('#vmNetworkPanel').items.items[1].cloneConfig({itemId : \"vmNetworkPanel\"+vIdx});",
                    "                                        ",
                    "                                            namePanel.setText(cpuData[vmId].vmname);",
                    "                                            cpuPanel.setText(cpuData[vmId].value.toFixed(0) + \"%\");",
                    "                                            memoryPanel.setText((memData[vmId].value/1024/1024).toFixed(2) + \"MB\");",
                    "                                            networkPanel.setText(netData[vmId].value.toFixed(0) + \"%\");",
                    "                                        ",
                    "                                            panel.down('#vmNamePanel').add(namePanel);",
                    "                                            panel.down('#vmCpuPanel').add(cpuPanel);",
                    "                                            panel.down('#vmMemoryPanel').add(memoryPanel);",
                    "                                            panel.down('#vmNetworkPanel').add(networkPanel);",
                    "                                        ",
                    "                                            namePanel.show();",
                    "                                            cpuPanel.show();",
                    "                                            memoryPanel.show();",
                    "                                            networkPanel.show();",
                    "                                            ",
                    "                                            cpu += parseFloat(cpuData[vmId].value);",
                    "                                            ",
                    "                                        });",
                    "                                        ",
                    "                                        cpu = cpu / vmKey.length;",
                    "                                        ",
                    "                                    } else {",
                    "                                        cpu =  0; memory = 0; network = 0;",
                    "                                        ",
                    "                                    }",
                    "                                    ",
                    "                                    if(cpu <= 50) {",
                    "                                        popWindow.down(\"#VmHostStat\").setText('<center><img src=\"resources/images/icons/status_01.png\" width=\"36\" height=\"36\" border=\"0\"></center>', false);",
                    "                                    } else if(cpu <= 70) {",
                    "                                        popWindow.down(\"#VmHostStat\").setText('<center><img src=\"resources/images/icons/status_02.png\" width=\"36\" height=\"36\" border=\"0\"></center>', false);",
                    "                                    } else {",
                    "                                        popWindow.down(\"#VmHostStat\").setText('<center><img src=\"resources/images/icons/status_03.png\" width=\"36\" height=\"36\" border=\"0\"></center>', false);",
                    "                                    }",
                    "                                    ",
                    "                                }",
                    "                            }",
                    "                        });",
                    "                        ",
                    "                    }",
                    "                }",
                    "            });",
                    "            ",
                    "        }",
                    "    }",
                    "});",
                    "",
                    "",
                    "//CPU",
                    "Ext.Ajax.request({",
                    "    url : GLOBAL.apiUrlPrefix + 'mon/graphite/cpu/' + record.get(\"text\") + '?timespan=10&timeunit=minutes',",
                    "    disableCaching : true,",
                    "    failMsg : false,",
                    "    success: function(response){",
                    "",
                    "        var columnData = Ext.decode(response.responseText);",
                    "",
                    "        if(columnData.length > 0) {",
                    "",
                    "            var data = columnData[0];",
                    "            var chartList = [];",
                    "",
                    "            Ext.each(data.datapoints, function (chartData, dateIdx) {",
                    "                var chartCol = {};",
                    "",
                    "                chartCol.date = new Date(chartData.date*1000);",
                    "                if(data.target.indexOf(\"user\") >= 0) {",
                    "                    chartCol.user_cpu = chartData.value;",
                    "                } else {",
                    "                    chartCol.system_cpu = chartData.value;",
                    "                }",
                    "",
                    "",
                    "                for(var i=1; i<columnData.length; i++) {",
                    "                    if(columnData[i].target.indexOf(\"user\") >= 0) {",
                    "                        chartCol.user_cpu = columnData[i].datapoints[dateIdx].value;",
                    "                    } else {",
                    "                        chartCol.system_cpu = columnData[i].datapoints[dateIdx].value;",
                    "                    }",
                    "                }",
                    "",
                    "                if(chartCol.user_cpu != null && chartCol.system_cpu != null) {",
                    "                    chartCol.user_cpu += chartCol.system_cpu;",
                    "                    chartList.push(chartCol);",
                    "                }",
                    "            });",
                    "",
                    "            Ext.getStore('VmHostCpuChartStore').loadData(chartList, false);",
                    "        }",
                    "    }",
                    "});",
                    "",
                    "//Memory",
                    "Ext.Ajax.request({",
                    "    url : GLOBAL.apiUrlPrefix + 'mon/graphite/memory/' +record.get(\"text\") + '?timespan=10&timeunit=minutes',",
                    "    disableCaching : true,",
                    "    failMsg : false,",
                    "    success: function(response){",
                    "",
                    "        var columnData = Ext.decode(response.responseText);",
                    "        if(columnData.length > 0) {",
                    "",
                    "            var data = columnData[0];",
                    "",
                    "            // Get the quality field from record",
                    "            // Update chart with data",
                    "            var chartList = [];",
                    "            Ext.each(data.datapoints, function (chartData) {",
                    "                var chartCol = {};",
                    "                chartCol.memory = chartData.value;",
                    "                chartCol.date = new Date(chartData.date*1000);",
                    "",
                    "                if(chartCol.memory != null) {",
                    "                    chartList.push(chartCol);",
                    "                }",
                    "",
                    "            });",
                    "",
                    "            Ext.getStore('VmHostMemoryChartStore').loadData(chartList, false);",
                    "        }",
                    "    }",
                    "});",
                    "",
                    "//Network",
                    "Ext.Ajax.request({",
                    "    url : GLOBAL.apiUrlPrefix + 'mon/graphite/interface/' + record.get(\"text\") + '?timespan=10&timeunit=minutes',",
                    "    disableCaching : true,",
                    "    failMsg : false,",
                    "    success: function(response){",
                    "",
                    "        var columnData = Ext.decode(response.responseText);",
                    "",
                    "        if(columnData.length > 0) {",
                    "",
                    "            var data = columnData[0];",
                    "            var chartList = [];",
                    "            var colNames = [];",
                    "            ",
                    "            Ext.each(data.datapoints, function (chartData, dateIdx) {",
                    "                var chartCol = {};",
                    "                var txValue = 0;",
                    "                var rxValue = 0;",
                    "",
                    "                chartCol.date = new Date(chartData.date*1000);",
                    "",
                    "                if(data.target.indexOf(\".tx\") > 0) {",
                    "                    txValue += chartData.value;",
                    "                } else {",
                    "                    rxValue += chartData.value;",
                    "                }",
                    "",
                    "                for(var i=1; i<columnData.length; i++) {",
                    "",
                    "",
                    "                    if(columnData[i].target.indexOf(\".tx\") > 0) {",
                    "                        txValue += columnData[i].datapoints[dateIdx].value;",
                    "                    } else {",
                    "                        rxValue += columnData[i].datapoints[dateIdx].value;",
                    "                    }",
                    "",
                    "                    chartCol[\"col_0\"] = txValue;",
                    "                    chartCol[\"col_1\"] = rxValue;",
                    "",
                    "                }",
                    "",
                    "                if(txValue > 0 && rxValue > 0) {",
                    "                    chartList.push(chartCol);",
                    "                }",
                    "                ",
                    "",
                    "            });",
                    "",
                    "            Ext.getStore('VmHostNetworkChartStore').loadData(chartList, false);",
                    "        }",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "a9c2ba8b-a359-47a1-b65e-3e1c99420574"
        }
    ]
}