/*
 * File: app/view/MyPanel119.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('spider.view.MyPanel119', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.mypanel119',

    requires: [
        'Ext.chart.Chart',
        'Ext.chart.axis.Category',
        'Ext.chart.axis.Numeric',
        'Ext.chart.series.Line'
    ],

    height: 45,
    collapsed: false,
    collapsible: false,
    header: false,
    title: 'Sencha',

    layout: {
        type: 'hbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'chart',
                    flex: 1,
                    height: 250,
                    shadow: false,
                    insetPadding: 5,
                    store: 'SampleStore',
                    axes: [
                        {
                            type: 'Category',
                            fields: [
                                'cate'
                            ],
                            grid: false,
                            hidden: true,
                            position: 'bottom'
                        },
                        {
                            type: 'Numeric',
                            fields: [
                                'test'
                            ],
                            label: '',
                            grid: false,
                            majorTickSteps: 1,
                            minorTickSteps: 1,
                            position: 'left'
                        }
                    ],
                    series: [
                        {
                            type: 'line',
                            label: '',
                            xField: 'cate',
                            yField: 'test',
                            showMarkers: false,
                            smooth: 3,
                            style: {
                                fill: '#3892d3',
                                'stroke-width': 1.2,
                                stroke: '#3892d3'
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});