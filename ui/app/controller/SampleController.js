/*
 * File: app/controller/SampleController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('spider.controller.SampleController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'monitoringBtn',
            selector: '#monitoringBtn'
        },
        {
            ref: 'myContainer1',
            selector: '#mycontainer1'
        },
        {
            ref: 'mypanel94',
            selector: '#mypanel94'
        }
    ],

    onMonitoringBtnClick: function(button, e, eOpts) {

        /**
         * Sample 메뉴 버튼 클릭 시 수행되는 function
         */
        var centerContainer = Ext.getCmp('centerContainer'),
            dashboardBtn = Ext.getCmp('dashboardBtn'),
            managementBtn = Ext.getCmp('managementBtn'),
            menuPanel = Ext.getCmp('menuPanel');

        // 현재 선택된 item이 dashboardPanel일 경우 무시한다.
        if (centerContainer.layout.getActiveItem().itemId === "samplePanel") {
            button.toggle(true);
            return;
        }

        dashboardBtn.toggle(false);
        managementBtn.toggle(false);
        button.toggle(true);

        menuPanel.layout.setActiveItem(0);
        centerContainer.layout.setActiveItem(2);

        //this.renderDashboard();

        Ext.Ajax.request({
            url: 'http://192.168.0.3:8000/render/?width=786&height=508&_salt=1409028000.87&target=vyos.cpu.0.cpu.user.value&from=-2minutes&rawData=true&format=json',
            disableCaching : true,
            success: function(response){

                var columnData = Ext.decode(response.responseText);
                var data = columnData[0];

                // Get the quality field from record
                // Update chart with data
                var chartList = [];
                Ext.each(data.datapoints, function (chartData) {
                    var chartCol = {};
                    chartCol.test = chartData[0];
                    chartCol.cate = chartData[1];
                    chartList.push(chartCol);
                });

                Ext.getCmp('sampleChart').series.getAt(0).setTitle(data.target);

                Ext.getCmp('sampleChart').getStore().loadData(chartList, false);

            }
        });
    },

    onContainerResize: function(component, width, height, oldWidth, oldHeight, eOpts) {

        var cmpWidth = width - 5;
        var cmpHeight = height - 40;

        var imgCmp = Ext.getCmp('graphiteImg');

        imgCmp.setWidth(cmpWidth);
        imgCmp.setHeight(cmpHeight);

        imgCmp.setSrc('http://192.168.0.3:8000/render/?_salt=1409028000.87&target=vyos.cpu.0.cpu.user.value&from=-2minutes'
                + '&width='+cmpWidth + '&height=' + cmpHeight);

    },

    init: function(application) {
        this.control({
            "#monitoringBtn": {
                click: this.onMonitoringBtnClick
            },
            "#mypanel94": {
                resize: this.onContainerResize
            }
        });
    }

});
